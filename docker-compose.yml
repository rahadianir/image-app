volumes:
  db:
  static:

networks:
  api-network:
  repository-network:

services:
  proxy:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - static:/usr/share/nginx/html:ro
    depends_on:
      - app
    networks:
      - api-network
  app:
    build: ./app
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_URL=postgres://postgres:postgres@db:5432/database?sslmode=disable
    ports:
      - 8080:8080
    expose:
      - 8080
    volumes:
      - static:/app/static
    networks:
      - api-network
      - repository-network
  db:
    platform: linux/x86_64
    image: postgres:14.1-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: database
    ports:
      - 5432:5432
    expose:
      - 5432
    volumes:
      - db:/var/lib/postgresql/data
      - ./migrations/database.sql:/docker-entrypoint-initdb.d/database.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - repository-network